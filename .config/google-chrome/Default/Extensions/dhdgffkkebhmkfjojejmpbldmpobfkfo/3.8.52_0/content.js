(function(){if(void 0!==window._background)console.warn('content: Stop here, cause a second Tampermonkey instance was detected!\nThis can be caused by using "document.write" at Userscripts.\nSee https://code.google.com/p/chromium/issues/detail?id=253388 for more information');else{var r={_background:!0,_webRequest:{},Converter:null,Eventing:null,D:!1,CV:!1,USV:!1};(function(){for(var c in r)r.hasOwnProperty(c)&&(window[c]=r[c])})();var J=function(){var c={},a={webkitStorageInfo:!0,JSLINT:!0},b=Object.getOwnPropertyNames(window),
d;d=window;for(var f=[];d=Object.getPrototypeOf(d);)f=f.concat(Object.getOwnPropertyNames(d));d=f;for(var f=0,h=null;h=d[f];f++)a[h]||r[h]||(2<h.length&&"on"===h.substr(0,2)?c[h]={proto:!0,event:!0}:c[h]={proto:!0});for(f=0;h=b[f];f++)a[h]||r[h]||c[h]||(c[h]={window:!0});return c};Registry.require("prepare");Registry.require("xmlhttprequest");Registry.require("convert");Registry.require("helper");var B=Registry.prepare(),w=Registry.get("xmlhttprequest"),K=w.run,n=Registry.get("helper"),s=n.clean;
Converter=Registry.get("convert");var t=null,u=null,g={safeContext:B.RUNTIME.ALLOWS_SAFE_CONTEXT,scriptBlocker:!1,proxy:!1},v=null,p=!1,x=!1,C=!1,y=!1,E=function(){D&&console.log("content: detected DOMContentLoaded "+Eventing.contextId);C=!0;p&&e.sendMessage("TMwin.domContentLoaded = true; if (typeof runAllLoadListeners !== 'undefined') runAllLoadListeners();")},F=function(c){y||(D&&console.log("content: first DOMNodeInserted "+Eventing.contextId),y=!0)},e={responses:{},initstate:0,sendMessage:function(c){var a=
"";if(0==this.initstate)this.initstate=1;else if(1==this.initstate){a+="var V = false;\nvar ENV = false;\n";a+="var TS = false;\n";a+="var D = "+(D?"true":"false")+";\n";a+="var Converter = "+n.serialize(Converter)+";\n";a+="var TMwin = { backup: {}, use: "+JSON.stringify(g)+", windowProps: "+JSON.stringify(J())+", isIncognito: "+chrome.extension.inIncognitoContext+" };\n";a+="var TMJSON = JSON;\n";a+="var _background = false;\n";a+="var console = window['console'];\n";a+="var JSON = window['JSON'];\n";
a+="function JSONcheck() {\n";a+="        if (!JSON.parse || JSON.parse != 'function parse() { [native code] }') {\n";a+="              if (TMJSON && TMJSON.parse == 'function parse() { [native code] }') {\n";a+="                  JSON = TMJSON;\n";a+="                  console.log('page: use JSON backup');\n";a+="              } else {\n";a+="                  JSON = window.JSON;\n";a+="                  console.log('page: use JSON fallback');\n";a+="              }\n";a+="        }\n";a+="};\n";
a+="JSONcheck();\n";a+="var Eventing = ("+n.serialize(G).replace("___eval___","eval")+")();\n";a+="var TM_do = "+n.serialize(L).replace("___eval___","eval")+";\n";a+="Eventing.init('"+Eventing.contextId+"');\n";a+="function cleanup(evt) {\n";a+="    Eventing.cleanup();\n";a+="    window.removeEventListener('unload', cleanup, false);\n";a+="    delete Eventing;\n";a+="    delete TMJSON;\n";a+="    delete TMwin;\n";a+="    delete Converter;\n";a+="};\n";a+="window.addEventListener('unload', cleanup, false);\n";
if(g.safeContext)window.eval("(function TM_mother() { "+a+"\n"+c+"})();");else{var b=document.createElement("script");b.textContent="(function TM_mother() { "+a+"\n"+c+"})();";b.setAttribute("name","TM_internal");(document.head||document.body||document.documentElement||document).appendChild(b);b.parentNode.removeChild(b)}this.initstate=2}else 2==this.initstate&&Eventing.fireEvent(c)},getResponseId:function(c){var a=0;if(c){for(;0==a||void 0!=e.responses[a];)a=n.createUUID();e.responses[a]=c}return a},
runResponse:function(c,a){for(var b in e.responses)if(b==c){var d="";try{if(d=JSON.parse(Converter.decode(a)),e.responses[b])e.responses[b](d);else console.log("Warn: content: responseId "+b+" is undefined!!!")}catch(f){console.log("content: Json parse error (runResponse):"+f+"\n"+a)}e.responses[b]=null;return}console.log("WARN: responseId "+c+" not found!")}},l={ports:{},log:function(c){_background?console.log("content: "+c):Eventing.fireEvent({fn:"log",args:"page: "+c})},onContentResponse:function(c,
a,b,d){_background?e.runResponse(b,Converter.encode(d)):Eventing.fireEvent({fn:"onContentResponse",args:arguments})},onResponse:function(c,a,b,d){if(_background)try{var f=Converter.encode(d);e.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runResponse('"+b+"', \""+f+'")')}catch(h){console.log("Error: processing onResponse")}else Eventing.fireEvent({fn:"onResponse",args:arguments})},onConnectResponse:function(c,a,b,d){if(_background)try{var f=Converter.encode(d);e.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runConnectResponse('"+
b+"', \""+f+'")')}catch(h){console.log("Error: processing onConnectResponse")}else Eventing.fireEvent({fn:"onConnectResponse",args:arguments})},onContentRequest:function(c,a,b){_background?c.id&&this.id&&c.id!=this.id||(c=Converter.encode(JSON.stringify({sender:a,request:c})),e.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runContentRequest('"+b+"', \""+c+'", 0);')):console.log("Warn: onContentRequest from non BG not supported")},onMessage:function(c,a,b){_background?c.id&&this.id&&c.id!=this.id||
(c=Converter.encode(JSON.stringify({sender:a,request:c})),e.sendMessage("if (TMwin.chromeEmu) TMwin.chromeEmu.runRequest('"+b+"', \""+c+'", 0)')):console.log("Warn: onMessage from non BG not supported")},runUpdateListener:function(){console.log("WARN: not supported!")},getUrl:function(){console.log("WARN: not supported!")},sendExtensionMessage:function(c,a,b){if(_background){var d=JSON.parse(a);d.responseId=b;chrome.extension.sendMessage(d,function(a){l.onResponse(c,0,b,JSON.stringify(a))});d=null}else Eventing.fireEvent({fn:"sendExtensionMessage",
args:arguments})},sendExtensionConnect:function(c,a,b){if(_background){var d=JSON.parse(a);d.responseId=b;var f=chrome.extension.connect({name:d});f.onMessage.addListener(function(a){l.onConnectResponse(c,0,b,JSON.stringify({onMessage:!0,msg:a}))});f.onDisconnect.addListener(function(a){l.onConnectResponse(c,0,b,JSON.stringify({onDisconnect:!0}));d=null});l.ports[b]=f}else Eventing.fireEvent({fn:"sendExtensionConnect",args:arguments})},sendExtensionPortMessage:function(c,a,b){if(_background){var d=
l.ports[b];if(d){var f=JSON.parse(a);f.responseId=b;d.postMessage(f)}else this.log("Error: sendExtensionPortMessage unable to find port "+b)}else Eventing.fireEvent({fn:"sendExtensionPortMessage",args:arguments})},sendTabsRequest:function(){console.log("WARN: not supported!")},createTab:function(){console.log("WARN: not supported!")},queryTab:function(){console.log("WARN: not supported!")},updateTab:function(){console.log("WARN: not supported!")},onUpdated:function(){console.log("WARN: not supported!")},
getMessage:function(){console.log("WARN: not supported!")},storageKey:function(){console.log("WARN: not supported!")},storageRemoveItem:function(){console.log("WARN: not supported!")},storageSetItem:function(){console.log("WARN: not supported!")},storageGetItem:function(){console.log("WARN: not supported!")},storageLength:function(){console.log("WARN: not supported!")}},L=function(c){var a={},a=_background?g:TMwin.use;if(a.safeContext)return a=null,a="object"===typeof c?JSON.stringify(c):JSON.stringify({method:"eval",
arg:c}),c=document.createEvent("MutationEvent"),c.initMutationEvent(Eventing.eventId+"#"+Eventing.contextId,!1,!1,null,null,null,a,c.ADDITION),document.dispatchEvent(c),c.returnValue;_background?console.log("ERROR: assert(use.safeContext)"):___eval___(c)},M=function(c){var a="document.addEventListener('"+Eventing.eventId+"#"+Eventing.contextId+"', "+function(a){var b=null,c;try{b=JSON.parse(a.attrName);c=window["passenger_"+a.type.replace(/[^#]*#/,"")];if("get"==b.method){for(var q=b.path.split("."),
e=window,k=0;k<q.length;k++)e=e[q[k]];a={};a.value=e[b.name];c["_"+b.id]=a}else if("set"==b.method){q=b.path.split(".");e=window;for(k=0;k<q.length;k++)e=e[q[k]];e[b.name]=c[b.id].value;c["_"+b.id]={}}else if("delete"==b.method){q=b.path.split(".");e=window;for(k=0;k<q.length;k++)e=e[q[k]];delete e[b.name];c["_"+b.id]={}}else"eval"==b.method&&___eval___(b.arg);b.id&&delete c[b.id]}catch(g){}}.toString().replace("___eval___","eval")+", false);\n",b=c.document.createElement("script");b.setAttribute("name",
"TM_internal");b.innerHTML=a;c=c.document;(c.documentElement||c).appendChild(b);b.parentNode.removeChild(b)},N=function(){for(var c=[window.HTMLElement.prototype,document.__proto__],a=0;a<c.length;a++)(function(){var b=c[a];Object.getOwnPropertyDescriptor(b,"wrappedJSObject")||(Object.defineProperties(b,{wrappedJSObject:{get:function(){return this},enumerable:!1,configurable:!0}}),s.push(function(){CV&&console.log("clean: "+n.toType(b)+"[wrappedJSObject]");delete b.wrappedJSObject}))})()},O=function(){var c=
!1;if(!function(){var a=document.createElement("p"),b=!1;a.addEventListener("DOMAttrModified",function(){b=!0},!1);a.setAttribute("class","trigger");return b}())for(var a=[window.HTMLElement.prototype,document.__proto__],b=0;b<a.length;b++){var d=a[b];d.___addEventListener||(d.___addEventListener=d.addEventListener,d.___removeEventListener=d.removeEventListener,d.removeEventListener=function(a,b,c){this.___removeEventListener(a,b,c)},d.addEventListener=function(a,b,d){if("DOMAttrModified"==a&&this.outerHTML){var e=
this.outerHTML.split(">")[0]+" />",k=this,g;g=this.parentNode?this.parentNode:this;var l=function(a,b,c,d){var f=document.createEvent("MutationEvent");f.initMutationEvent("DOMAttrModified",!0,!1,a,c||"",d||"",b,null==c?f.ADDITION:null==d?f.REMOVAL:f.MODIFICATION);a.dispatchEvent(f)};try{(new WebKitMutationObserver(function(a){for(var b in a)if(a.hasOwnProperty(b)){var c=a[b];if(""!=c.attributeName&&c.target){var d=c.oldValue,f=c.target.getAttribute(c.attributeName);d!=f&&l(k,c.attributeName,d,f)}}})).observe(k,
{childList:!1,subtree:!1,attributeOldValue:!0,attributes:!0})}catch(m){var n=function(a,b){void 0==b&&(b={});var c=a.replace(/\\\"/g,"").replace(/".*?"/g,"").replace(/^<[a-zA-b0-9]* |>$/g,"").split(" "),d;for(d in c)if(c.hasOwnProperty(d)){var f=c[d];"="==f.substr(f.length-1,1)&&(b[f.substr(0,f.length-1)]=null)}return b};c||console.log("content: WARN unable to use MutationObserver -> fallback to DOMSubtreeModified event");c=!0;g.addEventListener("DOMSubtreeModified",function(a){if(a.target==k&&(a=
a.target.outerHTML.split(">")[0]+" />",e!=a)){var b=document.createElement("div");b.innerHTML=e;var b=b.childNodes[0],c=document.createElement("div");c.innerHTML=a;var c=c.childNodes[0],d=n(e,n(a)),f;for(f in d)if(d.hasOwnProperty(f)){var h=b.getAttribute(f),g=c.getAttribute(f);h!=g&&l(k,f,h,g)}e=a}},!0)}}this.___addEventListener(a,b,d)},s.push(function(){d.removeEventListener=d.___removeEventListener;d.addEventListener=d.___addEventListener}))}},G=function(){var c={},a={};["createEvent","dispatchEvent",
"addEventListener","removeEventListener"].forEach(function(b){var c=document[b];a[b]=function(){return c.apply(document,arguments)}});["postMessage","addEventListener","removeEventListener"].forEach(function(a){var b=window[a];c[a]=function(){return b.apply(window,arguments)}});var b={topframe:window.self===window.top,eventId:"TM_do",contextId:null,rEventId:null,sEventId:null,eventSource:null,log:function(a){console.log((_background?"content":"page")+": "+a)},alternativeEventSource:{element:{dispatchEvent:function(a){window.Registry._altEventing||
(window.Registry._altEventing={});if(window.Registry._altEventing[a.type])window.Registry._altEventing[a.type](a)},addEventListener:function(a,b){window.Registry._altEventing||(window.Registry._altEventing={});window.Registry._altEventing[a]=b},removeEventListener:function(a){window.Registry._altEventing||(window.Registry._altEventing={});delete window.Registry._altEventing[a]}},event:{encode:function(a,b){return{type:a,data:b}},decode:function(a){return a.data}}},postMessageEventSource:{element:{dispatchEvent:function(a){return c.postMessage.apply(document,
[a,"*"])},addEventListener:function(a,b){return c.addEventListener("message",function(c){c.source==window&&c.data.id==a&&b(c)},!1)},removeEventListener:function(a,b){return c.removeEventListener("message",b)}},event:{encode:function(a,b){return{id:a,json:JSON.stringify(b)}},decode:function(a){return JSON.parse(a.data.json)}}},standardEventSource:{element:{dispatchEvent:function(){return a.dispatchEvent.apply(document,arguments)},addEventListener:function(){return a.addEventListener.apply(document,
arguments)},removeEventListener:function(){return a.removeEventListener.apply(document,arguments)}},event:{encode:function(b,c){var e=a.createEvent("MutationEvent");e.initMutationEvent(b,!1,!1,null,null,null,Converter.encodeR(JSON.stringify(c)),e.ADDITION);return e},decode:function(a){return JSON.parse(Converter.decodeR(a.attrName))}}},init:function(a){b.contextId=a;b.contextId?(a={},_background?(a=g,b.rEventId="TM_toContent",b.sEventId="TM_toPage",b.eventHandler=b.eventHandlerContent):(a=TMwin.use,
b.rEventId="TM_toPage",b.sEventId="TM_toContent",b.eventHandler=b.eventHandlerPage),b.eventSource=a.safeContext?b.alternativeEventSource:b.standardEventSource,b.registerListener()):b.log("Eventing.init() failed!!!")},fireEvent:function(a,c){void 0==c&&(c=b.sEventId+b.contextId);try{var e=b.eventSource.event.encode(c,a);b.eventSource.element.dispatchEvent(e)}catch(g){b.log("Error: fire event "+c+" -> "+JSON.stringify(a)+" "+g)}},registerListener:function(){b.eventSource.element.addEventListener(b.rEventId+
b.contextId,b.eventHandler,!1)},eventHandlerPage:function(a){try{var c=b.eventSource.event.decode(a);try{___eval___(c)}catch(e){console.log("page: Error: processing event! "+e.message+" -> ("+c+")")}}catch(g){b.log("Error: retrieving event! "+g.message),b.log(a)}},eventHandlerContent:function(a){try{var c=b.eventSource.event.decode(a);try{l[c.fn](c.args[0],c.args[1],c.args[2],c.args[3],c.args[4],c.args[5],c.args[6],c.args[7])}catch(e){b.log("Error: processing event ("+c.fn+")! "+e.message)}}catch(g){b.log("Error: retrieving event! "+
g.message),b.log(a)}},cleanup:function(){b.eventSource&&b.eventSource.element.removeEventListener(b.rEventId+b.contextId,b.eventHandler,!1)}};return b};Eventing=new G;var m={init:function(){window.addEventListener("load",m.runHlp,!1);window.addEventListener("DOMNodeInserted",m.runHlp,!1);window.addEventListener("DOMContentLoaded",m.runHlp,!1)},runHlp:function(c){p||(document.head||document.body?(m.cleanupHlp(),m.run()):void 0==c&&window.setTimeout(m.runHlp,100))},run:function(){if(!p&&u&&t){var c;
c=""+("var logLevel = "+v+";\n");var a="var tmCE = "+n.serialize(l)+";\nvar Event = function() {};\n",b="var TM_context_id = '"+Eventing.contextId+"';\n",d="";e.sendMessage("console.log('Tampermonkey started');");C?(d+="TMwin.loadHappened = true;\nTMwin.domContentLoaded = true;\n",D&&console.log("content: Start ENV with DOMContentLoaded "+Eventing.contextId)):y&&(d="TMwin.loadHappened = true;\n",D&&console.log("content: Start ENV with loadHappened "+Eventing.contextId));e.sendMessage("(function () { "+
c+b+""+a+t+u+d+"})();");t=u=null;p=!0}},cleanupHlp:function(){p||(window.removeEventListener("load",m.runHlp,!1),window.removeEventListener("DOMNodeInserted",m.runHlp,!1),window.removeEventListener("DOMContentLoaded",m.runHlp,!1))}},z=function(){chrome.extension.sendMessage({method:"unLoad",id:Eventing.contextId,topframe:Eventing.topframe,url:window.location.origin+window.location.pathname,params:window.location.search+window.location.hash},function(a){});try{Eventing.cleanup(),m.cleanupHlp()}catch(c){console.log("cleanup: Error: "+
c.message)}window.removeEventListener("DOMContentLoaded",E,!1);window.removeEventListener("DOMNodeInserted",F,!1);window.removeEventListener("unload",z,!1);null!=s?(s.finalize(),s=null):console.log("content: Warning: multiple unload events detected!!!")},H=function(c,a,b){if(!p)return window.setTimeout(function(){H(c,a,b)},10),!0;if(x){var d=e.getResponseId(b);l.onContentRequest(c,a,d)}else"getSrc"==c.method?b({src:n.getSource(document)}):"reload"==c.method?window.location.reload():"confirm"==c.method?
window.setTimeout(function(){var a=confirm(c.msg);b({confirm:a})},100):"showMsg"==c.method&&window.setTimeout(function(){window.setTimeout(function(){alert(c.msg)},1);b({})},100);return!0},P=2,Q=function(){D&&console.debug("content: create test XHR to check whether webRequest API is working");var c=function(a){a.webRequest&&(_webRequest=a.webRequest,w.setWebRequest(_webRequest))};K({method:"GET",url:"http://tampermonkey.net/empty.html",headers:{Referer:"http://doesnt.matter.com"}},{ondone:function(){chrome.extension.sendMessage({method:"getWebRequestInfo",
id:Eventing.contextId},c)}})},A=1,I=function(){try{t="("+Registry.getRaw("emulation.js")+")();\n",u="("+Registry.getRaw("environment.js")+")();\n"}catch(c){}l.id=n.createUUID();window.addEventListener("unload",z,!1);window.addEventListener("DOMContentLoaded",E,!1);window.addEventListener("DOMNodeInserted",F,!1);chrome.extension.onMessage.addListener(H);chrome.extension.sendMessage({method:"prepare",id:l.id,raw:[],topframe:Eventing.topframe,url:window.location.origin+window.location.pathname,params:window.location.search+
window.location.hash},function(a){void 0===a?(D&&console.debug("content: _early_ execution, connection to bg failed -> retry!"),window.setTimeout(I,A),A*=2):(v=a.logLevel,D|=60<=v,a.enabledScriptsCount?(g.proxy=a.unsafeWindow,"native"!==g.proxy&&(g.proxy="sandbox"),g.safeContext&="native"===g.proxy,g.safeContext&&(M(window),"native"===g.proxy&&(window.unsafeWindow=window,B.RUNTIME.NEED_UNSAFEWINDOW_PROXY&&console.warn("content: Chrome >= 27 detected! Tampermonkey needs a special Chrome option to be set. Visit http://tampermonkey.net/faq#Q404 for more infos."))),
O(),N(),e.sendMessage(),Eventing.init(l.id),D&&console.log("content: Started ("+Eventing.contextId+", "+window.location.origin+window.location.pathname+")"),p&&e.sendMessage("TMwin.adjustLogLevel("+v+");\n"),D&&console.log("content: start event processing for "+Eventing.contextId+" ("+a.enabledScriptsCount+" to run)"),x=!0,a.webRequest&&(_webRequest=a.webRequest,w.setWebRequest(_webRequest),_webRequest.headers&&!_webRequest.verified&&0<P--&&Q()),m.runHlp()):(D&&console.log("content: disable event processing for "+
l.id),m.cleanupHlp(),z(),x=!1,p=!0))})};I()}})();
