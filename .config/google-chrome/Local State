{
   "app_list": {
      "app_launch_count": 0,
      "last_app_launch_ping": "13054348800000000",
      "last_launch_ping": "13054348800000000",
      "launch_count": 0
   },
   "browser": {
      "enabled_labs_experiments": [  ],
      "last_redirect_origin": ""
   },
   "data_reduction": {
      "daily_original_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "20825522", "185026561", "23455191", "158734441" ],
      "daily_original_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_original_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "20825522", "185026561", "23455191", "158734441" ],
      "daily_received_length_https_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_long_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_short_bypass_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_unknown_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_via_data_reduction_proxy": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "daily_received_length_with_data_reduction_proxy_enabled": [ "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0", "0" ],
      "last_update_date": "13054341600000000"
   },
   "gl_renderer_string": "GeForce 210/PCIe/SSE2",
   "gl_vendor_string": "NVIDIA Corporation",
   "gl_version_string": "3.3.0 NVIDIA 340.32",
   "hardware_acceleration_mode_previous": true,
   "http_original_content_length": "388041715",
   "http_received_content_length": "388041715",
   "local_state": {
      "multiple_profile_prefs_version": 7
   },
   "network_time": {
      "network_time_mapping": {
         "local": 1409919129292.938,
         "network": 1409919129275.891
      }
   },
   "ntp": {
      "promo_resource_cache_update": "1409912053.488715"
   },
   "policy": {
      "last_statistics_update": "13054309507755065"
   },
   "profile": {
      "info_cache": {
         "Default": {
            "active_time": 1409918957.933996,
            "avatar_icon": "chrome://theme/IDR_PROFILE_AVATAR_0",
            "background_apps": false,
            "is_ephemeral": false,
            "is_omitted_from_profile_list": false,
            "is_using_default_name": false,
            "managed_user_id": "",
            "name": "Erster Nutzer",
            "user_name": "zottie12@gmail.com"
         }
      },
      "last_active_profiles": [ "Default" ],
      "last_used": "Default"
   },
   "show-first-run-bubble-option": 0,
   "shutdown": {
      "num_processes": 0,
      "num_processes_slow": 0,
      "type": 0
   },
   "uninstall_metrics": {
      "installation_date2": "1409663107",
      "launch_count": "8"
   },
   "user_experience_metrics": {
      "low_entropy_source2": 5931,
      "session_id": 7,
      "stability": {
         "breakpad_registration_fail": 8,
         "crash_count": 3,
         "debugger_not_present": 8,
         "execution_phase": 500,
         "exited_cleanly": false,
         "last_timestamp_sec": "1409918999",
         "launch_count": 8,
         "launch_time_sec": "1409746798",
         "plugin_stats2": [ {
            "crashes": 0,
            "instances": 0,
            "launches": 2,
            "loading_errors": 0,
            "name": "Shockwave Flash"
         } ],
         "session_end_completed": true,
         "stats_buildtime": "1408448910",
         "stats_version": "37.0.2062.94-64"
      }
   },
   "variations_last_fetch_time": "13054382398822282",
   "variations_seed": "",
   "variations_seed_date": "13054382398000000",
   "variations_seed_signature": "MEUCIDxP3Z6vra9s2m0Bi0dh5Rxz2YxxAeZBJmYl1tDdFSymAiEA6mup4l7ftLQo3M2aZ00Eakf7pe/+1ffptQGUQ5p7S6U=",
   "was": {
      "restarted": false
   }
}
